@model Futurist.Service.Dto.AnlKursDto

@{
    ViewBag.Title = "Analisa Kurs";
    ViewBag.pageTitle = "Analisa Kurs";
    Layout = "_Layout";
}

@section styles{
    <link href="/assets/css/datatables.min.css" rel="stylesheet">
    <link href="/assets/css/select2/select2.min.css" rel="stylesheet"/>
    <link href="/assets/css/select2/select2-bootstrap-5-theme.min.css" rel="stylesheet"/>
}

@Html.AntiForgeryToken()

<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-header">
                <h1>Analisa Kurs</h1>
                <!-- Dropdown for room ids -->
                <div class="row mb-3">
                    <div class="row mb-3">
                        <div class="col-6">
                            <label class="form-label" for="roomSelect">Room</label>
                            <select class="form-control" id="roomSelect"></select>
                        </div>
                        <div class="col-6">
                            <label class="form-label" for="verIdSelect">Version</label>
                            <select class="form-control" id="verIdSelect" disabled></select>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <table id="datatables-anl-rm-price" class="display table table-bordered dt-responsive datatable-wrapper" style="width:100%">
                    <thead>
                    <tr>
                        <th>Ver ID</th>
                        <th>Room</th>
                        <th>Currency Code</th>
                        <th>Valid From</th>
                        <th>Kurs Plan</th>
                        <th>Kurs Act</th>
                        <th>A/P</th>
                    </tr>
                    </thead>
                    <tfoot>
                    <tr>
                        <th>Ver ID</th>
                        <th>Room</th>
                        <th>Currency Code</th>
                        <th>Valid From</th>
                        <th>Kurs Plan</th>
                        <th>Kurs Act</th>
                        <th>A/P</th>
                    </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="/assets/js/datatables.min.js"></script>
    <script src="/assets/js/helper.js"></script>
    <script src="/assets/js/select2/select2.min.js"></script>
    
    <script>
        const token = $('input[name="__RequestVerificationToken"]').val();
        const roomSelect = $('#roomSelect');
        const verIdSelect = $('#verIdSelect');
        const datatablesAnlRmPrice = $('#datatables-anl-rm-price');
        let dataTableInstance = null;

        // Helper to clear and trigger change
        function clearSelect($select) {
            $select.val(null).trigger('change');
        }

        // Room dropdown
        roomSelect.select2({
            placeholder: "Select Room",
            ajax: {
                url: '/api/AnlRmApi/GetRoomIds',
                type: 'GET',
                dataType: 'json',
                delay: 500,
                headers: { 'RequestVerificationToken': token },
                processResults: function (data) {
                    return {
                        results: data.data.map(room => ({ id: room, text: room }))
                    };
                },
            }
        });

        // VerId dropdown (depends on room)
        function loadVerIds(room) {
            verIdSelect.select2({
                placeholder: "Select Version",
                ajax: {
                    url: '/api/ReportVersionApi/GetVersions',
                    type: 'GET',
                    dataType: 'json',
                    delay: 500,
                    headers: { 'RequestVerificationToken': token },
                    data: function() { return { room: room }; },
                    processResults: function (data) {
                        return {
                            // combine verId, verDate and notes into a single text
                            results: data.data.map(version => ({ id: version.verId, text: `Version: ${version.verId} | ${moment(version.verDate).format("DD MMM YYYY")} | ${version.notes}` }))
                        };
                    },
                }
            });
        }

        // Cascading logic
        roomSelect.on('change', function() {
            clearSelect(verIdSelect);
            verIdSelect.empty();

            // Enable/disable logic
            if (roomSelect.val()) {
                verIdSelect.prop('disabled', false);
                loadVerIds(roomSelect.val());
            } else {
                verIdSelect.prop('disabled', true);
            }

            reloadDataTable();
        });

        verIdSelect.on('change', function() {
            reloadDataTable();
        });

        // Add a refresh button handler
        function getRefreshButton() {
            return {
                text: '<i class="ri-refresh-line"></i> Refresh',
                className: 'btn btn-soft-secondary',
                action: function (e, dt, node, config) {
                    dt.ajax.reload();
                },
                titleAttr: 'Refresh Table'
            };
        }

        // DataTable loader
        function reloadDataTable() {
            // Only load if all dropdowns have value
            if (roomSelect.val() && verIdSelect.val()) {
                if (dataTableInstance) {
                    dataTableInstance.ajax.reload();
                } else {
                    dataTableInstance = datatablesAnlRmPrice.DataTable({
                        destroy: true,
                        searchDelay: 1000,
                        layout: {
                            topEnd: {
                                buttons: [
                                    getRefreshButton(),
                                    // 'copy', 'excel', 'pdf'
                                    {
                                        extend: 'copyHtml5',
                                        text: '<i class="ri-file-copy-line"></i> Copy',
                                        className: 'btn btn-soft-secondary',
                                        titleAttr: 'Copy to clipboard'
                                    },
                                    {
                                        extend: 'excelHtml5',
                                        text: '<i class="ri-file-excel-2-line"></i> Excel',
                                        className: 'btn btn-soft-secondary',
                                        titleAttr: 'Export to Excel'
                                    },
                                    {
                                        extend: 'pdfHtml5',
                                        text: '<i class="ri-file-pdf-line"></i> PDF',
                                        className: 'btn btn-soft-secondary',
                                        titleAttr: 'Export to PDF'
                                    }
                                ]
                            }
                        },
                        ajax: {
                            url: '/api/AnlRmApi/GetAnlKurs',
                            data: function() {
                                return {
                                    version: verIdSelect.val(),
                                };
                            },
                            beforeSend: function(xhr) {
                                xhr.setRequestHeader("RequestVerificationToken", token);
                            },
                            dataSrc: function(json) {
                                if (json.data && Array.isArray(json.data.items)) {
                                    return json.data.items;
                                }
                                if (Array.isArray(json.data)) {
                                    return json.data;
                                }
                                return json;
                            },
                            error: function(err){
                                alert(err.responseJSON.errorMessage);
                            }
                        },
                        columns: [
                            { data: 'verId', title: 'Ver ID', width: '30px', defaultContent: '' },
                            { data: 'room', title: 'Room', width: '30px', defaultContent: '' },
                            { data: 'currencyCode', title: 'Currency Code', defaultContent: '' },
                            { 
                                data: 'validFrom', 
                                title: 'Valid From', 
                                defaultContent: '', 
                                render: function(data) {
                                    return data ? moment(data).format('DD MMM YYYY') : '';
                            }
                            },
                            { 
                                data: 'kursPlan', 
                                title: 'Kurs Plan', 
                                defaultContent: '', 
                                render: function(data) {
                                    return data ? numberFormat.format(data) : '';
                                }
                            },
                            { 
                                data: 'kursAct', 
                                title: 'Kurs Act', 
                                defaultContent: '', 
                                render: function(data) {
                                    return data ? numberFormat.format(data) : '';
                                }
                            },
                            { 
                                data: 'ap', 
                                title: 'A/P', 
                                defaultContent: '', 
                                render: function(data) {
                                    return data ? percentFormat.format(data) : '';
                                }
                            }
                        ],
                        columnDefs: [
                            {
                                targets: [0, 1, 2, 3],
                                className: 'text-center'
                            }
                        ],
                        processing: true,
                        paging: true,
                        searching: true,
                        autoWidth: false,
                        responsive: false,
                        scrollX: true,
                        order: [],
                        initComplete: function () {
                            this.api()
                                .columns()
                                .every(function () {
                                    let column = this;
                                    let title = column.footer().textContent;
                                    let header = column.header();
                                    header.style.backgroundColor = '#4F81BD';
                                    header.style.color = 'white';
                                    let input = document.createElement('input');
                                    input.placeholder = title;
                                    input.className = "form-control";
                                    input.style.width = '100%';
                                    column.footer().replaceChildren(input);
                                    input.addEventListener('keyup', debounce(() => {
                                        if (column.search() !== input.value) {
                                            column.search(input.value).draw();
                                        }
                                    }, 1000));
                                });
                        }
                    });
                }
            } else if (dataTableInstance) {
                dataTableInstance.clear().draw();
            }
        }

        $(document).ready(function() {
            // Ensure only roomSelect is enabled on load
            roomSelect.prop('disabled', false);
            verIdSelect.prop('disabled', true);
        });
    </script>
}